name: GitHub Actions (linting, testing, building)
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [ 17.x ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install modules
        run: npm ci --force
      - name: Build production project
        run: npm run build:prod
        if: always()
      - name: Unit tests... [jest]
        run: npm run test:unit
        if: always()
      - name: Build screenshots... [storybook]
        run: npm run storybook:build
        if: always()

      - name: Publish screenshots to Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          onlyChanged: true # ðŸ‘ˆ Required option to enable TurboSnap
          exitZeroOnChanges: true

#      - name: Generate HTML report for tests
#        run: npm run test:ui:report
#        if: always()
      - name: Setup Pages
        uses: actions/configure-pages@v2
        if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        if: always()
        with:
          path: 'reports'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v1
#      - name: executing remote ssh deploy
#        uses: appleboy/ssh-action@v0.1.7
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          port: ${{ secrets.PORT }}
#          script: bash deploy.sh
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules...
        run: npm ci --force
      - name: linting typescript...
        run: npm run lint:ts
        if: always()
      - name: linting css...
        run: npm run lint:css
